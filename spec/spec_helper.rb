# This file was generated by the `rspec --init` command. Conventionally, all
# specs live under a `spec` directory, which RSpec adds to the `$LOAD_PATH`.
# Require this file using `require "spec_helper"` to ensure that it is only
# loaded once.
#
# See http://rubydoc.info/gems/rspec-core/RSpec/Core/Configuration

require 'coveralls'
# Coveralls.wear!

require 'spork'
require 'simplecov'
require 'hatena'
require 'rspec'
require 'webmock/rspec'
require 'debugger'

WebMock.disable_net_connect!(:allow => 'coveralls.io')

Spork.prefork do
  RSpec.configure do |config|
    config.expect_with :rspec do |c|
      c.syntax = :expect
    end
  end
  
end

Spork.each_run do
  SimpleCov.formatter = SimpleCov::Formatter::MultiFormatter[
    SimpleCov::Formatter::HTMLFormatter,
    Coveralls::SimpleCov::Formatter
  ]
  SimpleCov.start
end

def fixture_path
  File.expand_path("../fixtures", __FILE__)
end

def fixture(file)
  File.new(File.join(fixture_path, file))
end

def test_client
  @hatena_id = "hatena_id"
  @blog_id = "blog_id.hatenablog.com"
  @endpoint = "https://blog.hatena.ne.jp/#{@hatena_id}/#{@blog_id}"
  @credentials = Hatena::Credentials.new(
    "consumer_key",
    "consumer_secret",
    "token",
    "token_secret"
  )
  
  @client = Hatena::Blog::Client.new(
    @credentials,
    @hatena_id,
    @blog_id
  )

  stub_request(:get, @endpoint+"/atom/entry").to_return(body: fixture("fetch_entries01.xml") )
  stub_request(:get, @endpoint+"/atom/entry?page=2").to_return(body: fixture("fetch_entries02.xml") )
  stub_request(:get, @endpoint+"/atom/entry?page=3").to_return(body: fixture("fetch_entries03.xml") )

  return @client
end

